---

- name: Add Google Chrome key (apt)
  apt_key: url=https://dl-ssl.google.com/linux/linux_signing_key.pub state={{ google_agent_repository_state|default('yes') }}
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and ( google_chrome_stable_enabled or google_talkplugin_enabled )
  become: yes

- name: Add Google Chrome repo (apt)
  apt_repository: repo="deb http://dl.google.com/linux/chrome/deb/ stable main" state={{ google_agent_repository_state|default('yes') }} update_cache=no
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and ansible_architecture in ['x86_64'] and ( google_chrome_stable_enabled or google_talkplugin_enabled )
  become: yes

#Issue https://askubuntu.com/questions/724093/no-more-updates-for-google-chrome-apt-get-update-error
#TODO
#sudo sed -i -e 's/deb http/deb [arch=amd64] http/' "/etc/apt/sources.list.d/google-chrome.list" "/opt/google/chrome/cron/google-chrome"
- name: Fix Google drop support for 32 bits
  command: sed -i -e 's/deb http/deb [arch=amd64] http/' "/etc/apt/sources.list.d/dl_google_com_linux_chrome_deb.list"
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and ( google_chrome_stable_enabled or google_talkplugin_enabled )
  changed_when: false
  become: yes
  ignore_errors: yes

- name: Update the apt cache (in case of issue)
  action: apt update-cache=yes
  become: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: Install Google Chrome (apt)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ google_agent_pkg_state|default('present') }}"
  with_items:
    - google-chrome-stable
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and google_chrome_stable_enabled
  become: yes

- name: Add Google Talk repo (apt)
  apt_repository: repo="deb http://dl.google.com/linux/talkplugin/deb/ stable main" update_cache=yes state={{ google_agent_repository_state }}
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )  and ( google_chrome_stable_enabled or google_talkplugin_enabled )
  become: yes

- name: Install Google Talk Plugin (apt)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ google_agent_pkg_state|default('present') }}"
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and google_talkplugin_enabled
  with_items:
   - google-talkplugin
  become: yes

- name: Install google-chrome-stable prerequisite
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }}"
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  with_items:
#    - redhat-lsb
    - libXScrnSaver
#    - google-chrome-stable_current_x86_64.rpm
  become: yes
  changed_when: false
  
- name: Enable Yum repo for Google Chrome (yum)
  copy: dest=/etc/yum.repos.d/google-chrome.repo src=google-chrome.repo
  when: ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' ) and google_chrome_stable_enabled
  become: yes

- name: Install Google Chrome (yum)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ google_agent_pkg_state|default('present') }}"
  with_items:
   - google-chrome-stable
  when: ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' ) and google_chrome_stable_enabled
  become: yes

- name: Enable Yum repo for Google Talk (yum)
  copy: dest=/etc/yum.repos.d/google-talkplugin.repo src=google-talkplugin.repo
  when: ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' ) and google_talkplugin_enabled
  become: yes

- name: Install Google Talk Plugin (yum)
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ google_agent_pkg_state|default('present') }}"
  with_items:
   - google-talkplugin
  when: ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' ) and google_talkplugin_enabled
  become: yes

- name: Remove duplicate entry.
  file: name=/etc/apt/sources.list.d/{{ item }} state=absent
  become: yes
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  with_items: "{{ google_repo_files }}"
